# -*- coding: utf-8 -*-
"""Text Classification - Example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-b4_laWw5CD_7nKP3TKkad8CfOS09tYR
"""

import nltk
nltk.download('punkt')
from nltk.classify import NaiveBayesClassifier

def extract_words(words):
  return dict([(word, True) for word in words])

m_data = ['TPM Tianjin TPM', 'TPM TPM Shanghai', 'TPM Macao']
j_data = ['Chiba Kobe Kyoto TPM', 'Chiba Kobe Macao']

m_feats = [(extract_words(nltk.tokenize.word_tokenize(m_data[i[0]])), 'm') for i in enumerate(m_data)]
j_feats = [(extract_words(nltk.tokenize.word_tokenize(j_data[i[0]])), 'j') for i in enumerate(j_data)]

train_data = m_feats + j_feats

clf = NaiveBayesClassifier.train(train_data)

print('The test document is classified as: ', clf.classify(extract_words(nltk.tokenize.word_tokenize('TPM Kyoto Macao Chiba Kobe'))))

"""**Testing word not found situation**"""

import nltk
nltk.download('punkt')
from nltk.classify import NaiveBayesClassifier

def extract_words(words):
  return dict([(word, True) for word in words])

m_data = ['TPM Tianjin TPM', 'TPM TPM Shanghai', 'TPM Macao']
j_data = ['Chiba Kobe Kyoto TPM', 'Chiba Kobe Macao']

m_feats = [(extract_words(nltk.tokenize.word_tokenize(m_data[i[0]])), 'm') for i in enumerate(m_data)]
j_feats = [(extract_words(nltk.tokenize.word_tokenize(j_data[i[0]])), 'j') for i in enumerate(j_data)]

train_data = m_feats + j_feats

clf = NaiveBayesClassifier.train(train_data)

print('The test document is classified as: ', clf.classify(extract_words(nltk.tokenize.word_tokenize('india'))))